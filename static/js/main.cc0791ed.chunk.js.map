{"version":3,"sources":["components/card/card.component.jsx","components/sagas-example/sagas-example.component.jsx","App.js","redux/app.reducer.js","redux/root-reducer.js","redux/app.saga.js","redux/store.js","index.js"],"names":["Card","_ref","children","react_default","a","createElement","className","connect","state","value","app","dispatch","increment","type","decrement","card_component","onClick","App","props","sagas_example_component","INITIAL_STATE","appReducer","arguments","length","undefined","Object","objectSpread","rootReducer","combineReducers","onIncrement","incrementSaga","regenerator_default","wrap","_context","prev","next","console","log","delay","put","stop","_marked","_context2","takeLatest","_marked2","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","applyMiddleware","apply","run","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"+OAMeA,eAFF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,KCkBvCK,cATS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAME,IAAID,QAGQ,SAAAE,GAAQ,MAAK,CACtCC,UAAW,kBAAMD,EAAS,CAAEE,KAAM,eAClCC,UAAW,kBAAMH,EAAS,CAAEE,KAAM,iBAGrBN,CAjBM,SAAAN,GAAA,IAAGW,EAAHX,EAAGW,UAAWE,EAAdb,EAAca,UAAWL,EAAzBR,EAAyBQ,MAAzB,OACnBN,EAAAC,EAAAC,cAACU,EAAD,KACGN,EACDN,EAAAC,EAAAC,cAAA,UAAQW,QAASJ,GAAjB,SACAT,EAAAC,EAAAC,cAAA,UAAQW,QAASF,GAAjB,cCKWG,SARH,SAAAC,GACV,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACc,EAAD,iDCTAC,EAAgB,CACpBX,MAAO,GAoBMY,EAjBI,WAAmC,IAAlCb,EAAkCc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BF,EAC1B,QADoDE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACrCX,MACb,IAAK,sBACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GACFjB,EADL,CAEEC,MAAOD,EAAMC,MAAQ,IAEzB,IAAK,YACH,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACFjB,EADL,CAEEC,MAAOD,EAAMC,MAAQ,IAEzB,QACE,OAAOD,ICTEmB,EAJKC,YAAgB,CAClClB,IAAKW,uCCHUQ,cAMAC,GANV,SAAUD,IAAV,OAAAE,EAAA3B,EAAA4B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OADKF,EAAAE,KAAA,EACCC,QAAQC,IAAI,oBADb,OAEL,OAFKJ,EAAAE,KAAA,EAECG,YAAM,KAFP,OAGL,OAHKL,EAAAE,KAAA,EAGCI,YAAI,CAAE1B,KAAM,wBAHb,wBAAAoB,EAAAO,SAAAC,GAMA,SAAUX,IAAV,OAAAC,EAAA3B,EAAA4B,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACL,OADKO,EAAAP,KAAA,EACCQ,YAAW,YAAad,GADzB,wBAAAa,EAAAF,SAAAI,GCAP,IAAMC,EAAiBC,cAEjBC,EAAc,CAACC,IAAQH,GAEhBI,EAAQC,YAAYvB,EAAawB,IAAeC,WAAf,EAAmBL,IAEjEF,EAAeQ,IAAIvB,GCJnBwB,IAASC,OACPpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUP,MAAOA,GACf9C,EAAAC,EAAAC,cAACoD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.cc0791ed.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.css';\n\nconst Card = ({ children }) => <div className='card'>{children}</div>;\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../card/card.component';\n\nconst SagasExample = ({ increment, decrement, value }) => (\n  <Card>\n    {value}\n    <button onClick={increment}>Add 1</button>\n    <button onClick={decrement}>Minus 1</button>\n  </Card>\n);\n\nconst mapStateToProps = state => ({\n  value: state.app.value\n});\n\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch({ type: 'INCREMENT' }),\n  decrement: () => dispatch({ type: 'DECREMENT' })\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SagasExample);\n","import React from 'react';\n\nimport SagasExample from './components/sagas-example/sagas-example.component';\n\nimport './App.css';\n\nconst App = props => {\n  return (\n    <div className='App'>\n      <SagasExample />\n    </div>\n  );\n};\n\nexport default App;\n","const INITIAL_STATE = {\n  value: 0\n};\n\nconst appReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'INCREMENT_FROM_SAGA':\n      return {\n        ...state,\n        value: state.value + 1\n      };\n    case 'DECREMENT':\n      return {\n        ...state,\n        value: state.value - 1\n      };\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { combineReducers } from 'redux';\n\nimport appReducer from './app.reducer';\n\nconst rootReducer = combineReducers({\n  app: appReducer\n});\n\nexport default rootReducer;\n","import { takeLatest, delay, put } from 'redux-saga/effects';\n\nexport function* onIncrement() {\n  yield console.log('I am incremented');\n  yield delay(3000);\n  yield put({ type: 'INCREMENT_FROM_SAGA' });\n}\n\nexport function* incrementSaga() {\n  yield takeLatest('INCREMENT', onIncrement);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nimport { incrementSaga } from './app.saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [logger, sagaMiddleware];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(incrementSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nimport App from './App';\n\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}